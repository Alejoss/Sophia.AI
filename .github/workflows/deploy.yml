# .github/workflows/deploy.yml
name: Test and Deploy to Server

on:
  push:
    branches: [ main ]  # Trigger on push to main branch
  pull_request:
    branches: [ main ]  # Also run tests on PRs
  # Optionally trigger manually
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: any_password
          POSTGRES_DB: ACADEMIA_BLOCKCHAIN_DB
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r acbc_app/requirements.txt

    - name: Set up environment variables
      run: |
        echo "ACADEMIA_BLOCKCHAIN_SKEY=test-secret-key-for-ci" >> $GITHUB_ENV
        echo "POSTGRES_PASSWORD=any_password" >> $GITHUB_ENV
        echo "POSTGRES_DB=ACADEMIA_BLOCKCHAIN_DB" >> $GITHUB_ENV
        echo "POSTGRES_USER=postgres" >> $GITHUB_ENV
        echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV
        echo "GOOGLE_OAUTH_CLIENT_ID=647602001183-2u5t54maog49bc53tf8hkltmv5hhb07s.apps.googleusercontent.com" >> $GITHUB_ENV
        echo "VITE_API_URL=http://localhost:8000" >> $GITHUB_ENV
        echo "DEBUG=True" >> $GITHUB_ENV

    - name: Create logs directory
      run: |
        mkdir -p acbc_app/logs

    - name: Run Django migrations
      run: |
        cd acbc_app
        python manage.py migrate

    - name: Run Django tests with coverage
      run: |
        cd acbc_app
        pip install coverage
        coverage run --source='.' manage.py test --verbosity=2
        coverage report
        coverage html

    - name: Run Django check
      run: |
        cd acbc_app
        python manage.py check --deploy

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Only run deploy if tests pass
    if: github.ref == 'refs/heads/main'  # Only deploy on main branch

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT || 22 }}
        script: |
          # Exit on any error
          set -e

          # Navigate to your project directory
          cd ~/Sophia.AI

          # Pull latest changes
          echo "Pulling latest changes..."
          git pull

          # Restart Docker Compose services
          echo "Restarting Docker Compose services..."
          docker compose up -d --force-recreate

          # Test nginx configuration before reload
          echo "Testing nginx configuration..."
          sudo nginx -t

          # Reload nginx
          echo "Reloading nginx..."
          sudo nginx -s reload

          echo "Deployment completed successfully!"

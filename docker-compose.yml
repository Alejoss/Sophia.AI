version: '3.8'
services:
  backend:
    build:
      context: ./acbc_app
      dockerfile: backend.Dockerfile
    container_name: acbc_backend
    volumes:
      - ./acbc_app:/app
      - static_volume:/app/static
      - /var/www/sophia-ai/staticfiles:/app/staticfiles
      - /var/www/sophia-ai/media:/app/media
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - ./acbc_app/.env
    environment:
      - DB_NAME=acbc_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DEBUG=True
      - SECRET_KEY=django-insecure-development-key-123
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - ENVIRONMENT=DEVELOPMENT
      # Add these to match Django settings expectations
      - POSTGRES_DB=acbc_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped
  frontend:
    build:
      context: ./frontend
      dockerfile: frontend.Dockerfile
    container_name: acbc_frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
    networks:
      - app_network
  postgres:
    image: postgres
    environment:
      - POSTGRES_DB=acbc_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
networks:
  app_network:
    driver: bridge
volumes:
  postgres_data:
  static_volume:

# Generated by Django 5.0 on 2024-10-31 15:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('QUIZ', 'Quiz'), ('VIDEO_CONSULTATION', 'Video Consultation'), ('CONTENT_CREATION', 'Content Creation')], max_length=20)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_for', models.CharField(choices=[('KNOWLEDGE_PATH', 'Knowledge Path'), ('USER_WALL', 'User Wall'), ('TEACHER_RESOURCE', 'Teacher Resource')], default='USER_WALL', max_length=20)),
                ('media_type', models.CharField(choices=[('VIDEO', 'Video'), ('AUDIO', 'Audio'), ('TEXT', 'Text'), ('IMAGE', 'Image')], default='TEXT', max_length=5)),
                ('is_visible', models.BooleanField(default=False)),
                ('rating', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('activity_requirement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='required_contents', to='content.activityrequirement')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.collection')),
            ],
        ),
        migrations.CreateModel(
            name='BlockchainInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_receipt', models.JSONField(blank=True, null=True)),
                ('content', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='content.content')),
            ],
        ),
        migrations.CreateModel(
            name='FileDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='files/')),
                ('url', models.URLField(blank=True, null=True)),
                ('extension', models.CharField(blank=True, max_length=10)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('extracted_text', models.TextField(blank=True, null=True)),
                ('text_length', models.PositiveIntegerField(blank=True, null=True)),
                ('text_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='content.content')),
            ],
        ),
        migrations.CreateModel(
            name='KnowledgePath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('votes', models.IntegerField(default=0)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_paths', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='activityrequirement',
            name='knowledge_path',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='content.knowledgepath'),
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='collection',
            name='library',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.library'),
        ),
        migrations.CreateModel(
            name='ModerationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('DELETE', 'Delete'), ('REPORT', 'Report')], max_length=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_logs', to='content.content')),
                ('moderator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_actions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('VIDEO', 'Video'), ('AUDIO', 'Audio'), ('TEXT', 'Text'), ('IMAGE', 'Image')], max_length=5)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='content.content')),
                ('knowledge_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='content.knowledgepath')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_topics', to=settings.AUTH_USER_MODEL)),
                ('moderators', models.ManyToManyField(related_name='moderated_topics', to=settings.AUTH_USER_MODEL)),
                ('related_topics', models.ManyToManyField(blank=True, related_name='related_to', to='content.topic')),
            ],
        ),
        migrations.AddField(
            model_name='content',
            name='topics',
            field=models.ManyToManyField(related_name='contents', to='content.topic'),
        ),
        migrations.CreateModel(
            name='NodeActivityRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_mandatory', models.BooleanField(default=True)),
                ('activity_requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.activityrequirement')),
                ('following_node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='preceding_activities', to='content.node')),
                ('preceding_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following_activities', to='content.node')),
            ],
            options={
                'unique_together': {('preceding_node', 'following_node', 'activity_requirement')},
            },
        ),
        migrations.CreateModel(
            name='NodeOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('knowledge_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='node_orders', to='content.knowledgepath')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.node')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('knowledge_path', 'order')},
            },
        ),
    ]
